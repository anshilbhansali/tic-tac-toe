{"ast":null,"code":"var _jsxFileName = \"/Users/anshilbhansali/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // Function component; only a function that takes in props and returns a rendering\n\nfunction Square(props) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, props.value);\n} // React component; has a constructor function where you can define and control state with other functions\n\n\nclass Board extends React.Component {\n  renderSquare(i, color) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      color: color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    });\n  }\n\n  render() {\n    console.log(this.props.winningLine);\n    const green = '#06f980';\n    const white = '#fff';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true,\n      stepNumber: 0\n    };\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const squares = history[history.length - 1].squares.slice(); // use .slice() to create a copy\n    // if there is already a winner or this square is filled\n\n    if (calculateWinner(squares).winner || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    const new_history = history.slice();\n    new_history.push({\n      squares: squares\n    });\n    this.setState({\n      history: new_history,\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((curr_squares, i) => {\n      const description = i ? 'Go to move #' + i : 'Go to game start';\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.jumpTo(i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, description));\n    });\n    let status = '';\n\n    if (winner.winner) {\n      status = 'Winner: ' + winner.winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      winningLine: winner.line,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, status), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, moves)));\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Game, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        line: [a, b, c]\n      };\n    }\n  }\n\n  return {\n    winner: null,\n    line: null\n  };\n}","map":{"version":3,"sources":["/Users/anshilbhansali/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","backgroundColor","value","Board","Component","renderSquare","i","color","squares","render","console","log","winningLine","green","white","Game","constructor","state","history","Array","fill","xIsNext","stepNumber","jumpTo","step","setState","handleClick","slice","length","calculateWinner","winner","new_history","push","current","moves","map","curr_squares","description","status","line","document","getElementById","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// Function component; only a function that takes in props and returns a rendering\nfunction Square(props){\n  return (\n      <button className=\"square\" onClick={props.onClick} style={{backgroundColor: \"#fff\"}}>\n        {props.value}\n      </button>\n    );\n}\n\n\n// React component; has a constructor function where you can define and control state with other functions\nclass Board extends React.Component {\n  renderSquare(i, color) {\n    return (\n        <Square\n          value={this.props.squares[i]}\n          onClick={() => this.props.onClick(i)}\n          color={color}\n        />\n      );\n  }\n\n  render() {\n    console.log(this.props.winningLine);\n    const green = '#06f980';\n    const white = '#fff';\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      xIsNext: true,\n      stepNumber: 0\n    };\n  }\n\n  jumpTo(step){\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  handleClick(i){\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const squares = history[history.length - 1].squares.slice(); // use .slice() to create a copy\n\n    // if there is already a winner or this square is filled\n    if (calculateWinner(squares).winner || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    const new_history = history.slice();\n    new_history.push({\n      squares: squares\n    });\n\n    this.setState({\n      history: new_history,\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((curr_squares, i) => {\n      const description = i ? 'Go to move #' + i : 'Go to game start';\n      return (\n          <li key={i}>\n            <button onClick={() => this.jumpTo(i)}>{description}</button>\n          </li>\n        );\n    });\n\n    let status = '';\n    if (winner.winner){\n      status = 'Winner: ' + winner.winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n            winningLine={winner.line}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        line: [a, b, c]\n      }\n    }\n  }\n  return {\n    winner: null,\n    line: null\n  }\n}\n"]},"metadata":{},"sourceType":"module"}