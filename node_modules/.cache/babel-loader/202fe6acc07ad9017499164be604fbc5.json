{"ast":null,"code":"var _jsxFileName = \"/Users/anshilbhansali/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // Function component; only a function that takes in props and returns a rendering\n\nfunction Square(props) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    style: {\n      backgroundColor: props.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, props.value);\n} // React component\n\n\nclass Board extends React.Component {\n  renderSquare(i, color) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      color: color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    });\n  }\n\n  render() {\n    const green = '#06f980';\n    const white = '#fff';\n    const orange = '#f1a907';\n    let colorMap = {\n      0: white,\n      1: white,\n      2: white,\n      3: white,\n      4: white,\n      5: white,\n      6: white,\n      7: white,\n      8: white\n    };\n\n    if (this.props.winningLine != null) {\n      for (let i of this.props.winningLine) {\n        colorMap[i] = green;\n      }\n    }\n\n    if (this.props.isDraw) {\n      for (let i in colorMap) {\n        colorMap[i] = orange;\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, this.renderSquare(0, colorMap[0]), this.renderSquare(1, colorMap[1]), this.renderSquare(2, colorMap[2])), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, this.renderSquare(3, colorMap[3]), this.renderSquare(4, colorMap[4]), this.renderSquare(5, colorMap[5])), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, this.renderSquare(6, colorMap[6]), this.renderSquare(7, colorMap[7]), this.renderSquare(8, colorMap[8])));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true,\n      stepNumber: 0\n    };\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const squares = history[history.length - 1].squares.slice(); // use .slice() to create a copy\n    // if there is already a winner or this square is filled\n\n    if (calculateWinner(squares).winner || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    const new_history = history.slice();\n    new_history.push({\n      squares: squares\n    });\n    this.setState({\n      history: new_history,\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((curr_squares, i) => {\n      const description = i ? 'Go to move #' + i : 'Go to game start';\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.jumpTo(i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, description));\n    });\n    let status = '';\n\n    if (winner.winner) {\n      status = 'Winner: ' + winner.winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      winningLine: winner.line,\n      isDraw: winner.isDraw,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, status), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, moves)));\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  let isDraw = false;\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (i of squares) {}\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        line: [a, b, c],\n        isDraw: isDraw\n      };\n    }\n  }\n\n  return {\n    winner: null,\n    line: null,\n    isDraw: isDraw\n  };\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Game, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/anshilbhansali/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","backgroundColor","color","value","Board","Component","renderSquare","i","squares","render","green","white","orange","colorMap","winningLine","isDraw","Game","constructor","state","history","Array","fill","xIsNext","stepNumber","jumpTo","step","setState","handleClick","slice","length","calculateWinner","winner","new_history","push","current","moves","map","curr_squares","description","status","line","lines","a","b","c","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// Function component; only a function that takes in props and returns a rendering\nfunction Square(props){\n  return (\n      <button className=\"square\" onClick={props.onClick} style={{backgroundColor: props.color}}>\n        {props.value}\n      </button>\n    );\n}\n\n\n// React component\nclass Board extends React.Component {\n  renderSquare(i, color) {\n    return (\n        <Square\n          value={this.props.squares[i]}\n          onClick={() => this.props.onClick(i)}\n          color={color}\n        />\n      );\n  }\n\n  render() {\n    const green = '#06f980';\n    const white = '#fff';\n    const orange = '#f1a907';\n\n    let colorMap = {\n      0: white,\n      1: white,\n      2: white,\n      3: white,\n      4: white,\n      5: white,\n      6: white,\n      7: white,\n      8: white\n    };\n    if (this.props.winningLine!=null){\n      for (let i of this.props.winningLine){\n        colorMap[i] = green;\n      }\n    }\n\n    if (this.props.isDraw){\n      for (let i in colorMap){\n        colorMap[i] = orange;\n      }\n    }\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0, colorMap[0])}\n          {this.renderSquare(1, colorMap[1])}\n          {this.renderSquare(2, colorMap[2])}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3, colorMap[3])}\n          {this.renderSquare(4, colorMap[4])}\n          {this.renderSquare(5, colorMap[5])}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6, colorMap[6])}\n          {this.renderSquare(7, colorMap[7])}\n          {this.renderSquare(8, colorMap[8])}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      xIsNext: true,\n      stepNumber: 0\n    };\n  }\n\n  jumpTo(step){\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  handleClick(i){\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const squares = history[history.length - 1].squares.slice(); // use .slice() to create a copy\n\n    // if there is already a winner or this square is filled\n    if (calculateWinner(squares).winner || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    const new_history = history.slice();\n    new_history.push({\n      squares: squares\n    });\n\n    this.setState({\n      history: new_history,\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((curr_squares, i) => {\n      const description = i ? 'Go to move #' + i : 'Go to game start';\n      return (\n          <li key={i}>\n            <button onClick={() => this.jumpTo(i)}>{description}</button>\n          </li>\n        );\n    });\n\n    let status = '';\n    if (winner.winner){\n      status = 'Winner: ' + winner.winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n            winningLine={winner.line}\n            isDraw={winner.isDraw}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  let isDraw = false;\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (i of squares){\n\n  }\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        line: [a, b, c],\n        isDraw: isDraw\n      }\n    }\n  }\n  return {\n    winner: null,\n    line: null,\n    isDraw: isDraw\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}